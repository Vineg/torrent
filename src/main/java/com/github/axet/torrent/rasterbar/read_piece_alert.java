package com.github.axet.torrent.rasterbar;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : c/libtorrent.h:315</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class read_piece_alert extends Structure {
	/// C type : torrent_alert
	public torrent_alert torrent_alert;
	/// C type : void*
	public Pointer buffer;
	public int piece;
	public int size;
	public read_piece_alert() {
		super();
	}
    @Override
    protected List getFieldOrder() {
        return Arrays.asList(new String[]{"torrent_alert", "buffer", "piece", "size"});
	}
	/**
	 * @param torrent_alert C type : torrent_alert<br>
	 * @param buffer C type : void*
	 */
	public read_piece_alert(torrent_alert torrent_alert, Pointer buffer, int piece, int size) {
		super();
		this.torrent_alert = torrent_alert;
		this.buffer = buffer;
		this.piece = piece;
		this.size = size;
	}
	public static class ByReference extends read_piece_alert implements Structure.ByReference {
		
	};
	public static class ByValue extends read_piece_alert implements Structure.ByValue {
		
	};
}
